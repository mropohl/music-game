import { isNativeAudioNode } from '../guards/native-audio-node';
export const interceptConnections = (original, interceptor) => {
    original.connect = ((destination, 
    // @todo TypeScript can't infer the type for the parameters output and input in this case.
    output = 0, // tslint:disable-line:no-inferrable-types
    input = 0 // tslint:disable-line:no-inferrable-types
    ) => {
        if (isNativeAudioNode(destination)) {
            // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.
            interceptor.connect.call(interceptor, destination, output, input);
            // Bug #11: Safari does not support chaining yet.
            return destination;
        }
        // @todo TypeScript does still assume that connect() returns void.
        return interceptor.connect.call(interceptor, destination, output);
    });
    original.disconnect = function () {
        // @todo TypeScript cannot infer all the signatures yet.
        interceptor.disconnect.apply(interceptor, arguments);
    };
    return original;
};
//# sourceMappingURL=/build/es2018/helpers/intercept-connections.js.map